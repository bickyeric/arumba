type Query {
  comics(name: String!, first: Int, offset: Int): [ Comic! ]!
  episodes(comicId: ID!, before: String, after: String, first: Int, last: Int): EpisodeConnection!
}

type Comic {
  id: ID!
  name: String!
  episodes(first: Int, offset: Int): [ Episode! ]
  createdAt: Timestamp!
  updatedAt: Timestamp!
}

type Episode {
  id: ID!
  name: String!
  no: Int!
  pages: [ Page! ]
  createdAt: Timestamp!
  updatedAt: Timestamp!
}

type EpisodeConnection {
  edges: [EpisodeEdge!]
}

type EpisodeEdge {
  node: Episode!
  cursor: String!
}

type Page {
  id: ID!
  link: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
}

scalar Timestamp
