// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bickyeric/arumba/connection (interfaces: NetworkInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNetworkInterface is a mock of NetworkInterface interface
type MockNetworkInterface struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkInterfaceMockRecorder
}

// MockNetworkInterfaceMockRecorder is the mock recorder for MockNetworkInterface
type MockNetworkInterfaceMockRecorder struct {
	mock *MockNetworkInterface
}

// NewMockNetworkInterface creates a new mock instance
func NewMockNetworkInterface(ctrl *gomock.Controller) *MockNetworkInterface {
	mock := &MockNetworkInterface{ctrl: ctrl}
	mock.recorder = &MockNetworkInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNetworkInterface) EXPECT() *MockNetworkInterfaceMockRecorder {
	return m.recorder
}

// POST mocks base method
func (m *MockNetworkInterface) POST(arg0 string, arg1 []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "POST", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// POST indicates an expected call of POST
func (mr *MockNetworkInterfaceMockRecorder) POST(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "POST", reflect.TypeOf((*MockNetworkInterface)(nil).POST), arg0, arg1)
}
