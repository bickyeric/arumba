version: 2.1

jobs:
  build:
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Setup
          command: |
            go mod tidy
      - run:
          command: |
            make build
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            make push

  test:
    docker:
      - image: circleci/golang:latest
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - attach_workspace:
          at: ~/
      # - checkout
      # - run: mkdir -p $TEST_RESULTS /tmp/workspace
      # - run: go mod tidy
      # - run: gotestsum --junitfile ${TEST_RESULTS}/test.xml -- -coverprofile=/tmp/workspace/cover.out ./...
      # - store_test_results:
      #     path: /tmp/test-results
      # - persist_to_workspace:
      #     root: /tmp
      #     paths:
      #       - workspace/cover.out

  before-test:
    docker:
      - image: circleci/golang:latest
    steps:
      - run:
          name: Download test-reporter
          command: |
            mkdir -p /tmp/workspace
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/workspace/cc-test-reporter
            chmod +x ./tmp/workspace/cc-test-reporter
      - run:
          name: Notify codeclimate
          command: |
            ./tmp/workspace/cc-test-reporter before-build
      - persist_to_workspace:
          root: /tmp
          paths:
            - workspace/cc-test-reporter

  after-test:
    docker:
      - image: circleci/golang:latest
    steps:
      # - attach_workspace:
      #     at: ~/
      - run: echo "hehehe"

  deploy:
    docker:
      - image: circleci/golang:latest
    steps:
      - add_ssh_keys:
          fingerprints:
            - "9f:34:3d:5c:7b:e3:c4:d3:6e:9a:fd:14:21:f0:38:c0"
      - run:
          name: Setup Known Host
          command: |
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
            sudo apt install gettext
      - checkout
      - run: make deploy

workflows:
  version: 2
  production:
    jobs:
      - before-test
      - test:
          requires:
            - before-test
      - after-test:
          requires:
            - test
      - build:
          filters:
            branches:
              only: master
          requires:
            - test
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - build
